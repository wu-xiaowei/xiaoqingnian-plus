(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{409:function(t,a,s){"use strict";s.r(a);var _=s(4),v=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"textcnn-文本分类模型在文章评论审核中的实现与部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#textcnn-文本分类模型在文章评论审核中的实现与部署"}},[t._v("#")]),t._v(" TextCNN 文本分类模型在文章评论审核中的实现与部署")]),t._v(" "),a("blockquote",[a("p",[t._v("作者："),a("a",{attrs:{href:"https://gitee.com/crzzx",target:"_blank",rel:"noopener noreferrer"}},[t._v("南侠"),a("OutboundLink")],1),t._v("，"),a("a",{attrs:{href:"https://wx.zsxq.com/dweb2/index/group/51122858222824",target:"_blank",rel:"noopener noreferrer"}},[t._v("编程导航星球"),a("OutboundLink")],1),t._v(" 编号 29240")])]),t._v(" "),a("p",[t._v('网络上的"喷子"现象导致新闻文章评论区充斥着大量谩骂言辞。为了提升平台品质和用户体验，急需解决如何自动拦截这些谩骂评论的问题。本文旨在通过构建卷积神经网络模型，实现对谩骂评论的自动识别，以机器方式对抗这些网络喷子。')]),t._v(" "),a("p",[t._v("在新闻文章评论中，经常可见包括对新闻人物的辱骂、对编辑的恶语以及评论回复中对楼主的攻击等谩骂言辞，这不仅损害了平台的声誉和品质，更直接影响了用户的使用体验。因此，减少谩骂评论的出现成为迫切需要解决的问题。鉴于评论数量庞大，仅依赖人工审核显然是不切实际的。我们的目标是建立一种自动识别算法，通过模型拦截这些脏话脏语，从而有效净化评论区。")]),t._v(" "),a("h2",{attrs:{id:"_1-算法结构和思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-算法结构和思路"}},[t._v("#")]),t._v(" 1. 算法结构和思路")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904377.png",loading:"lazy"}})]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("预处理阶段")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("文本清洗")]),t._v("：去除无关字符、标点符号，统一大小写等，以规范输入文本。")]),t._v(" "),a("li",[a("strong",[t._v("分词处理")]),t._v("：将文本划分为词汇，有助于更精准地进行后续检测。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("辱骂违规词检测")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("建立违规词库")]),t._v("：维护一个包含辱骂和不当言辞的词汇库，定期更新以适应新的网络用语。")]),t._v(" "),a("li",[a("strong",[t._v("多层次匹配")]),t._v("：采用多层次的匹配策略，包括精确匹配、模糊匹配和同义词匹配，提高检测的准确性。")]),t._v(" "),a("li",[a("strong",[t._v("动态过滤")]),t._v("：考虑引入动态过滤机制，即根据用户行为和社交网络动态，调整违规词库，使其更符合实际使用情境。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("政治敏感词检测")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("建立敏感词库")]),t._v("：创建一个包含政治敏感词汇的库，以便检测涉及政治敏感话题的评论。")]),t._v(" "),a("li",[a("strong",[t._v("关联性分析")]),t._v("：考虑评论中词汇的关联性，以防止误判。某些词汇可能在特定上下文中并非政治敏感，因此需要综合考虑。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("TextCNN模型")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("模型架构")]),t._v("：确保TextCNN模型具有合适的深度和广度，以捕捉评论中的语义和上下文信息。")]),t._v(" "),a("li",[a("strong",[t._v("多通道卷积")]),t._v("：考虑使用多个卷积核和多通道的卷积层，以捕获不同尺度的特征。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("输出和审核结果")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("综合判断")]),t._v("：融合辱骂违规词检测、政治敏感词检测和TextCNN模型的输出，形成最终的审核决策。")]),t._v(" "),a("li",[a("strong",[t._v("可解释性")]),t._v("：为了提高模型的可解释性，记录各个阶段的判断结果，以便后续调整和分析。")])])])]),t._v(" "),a("p",[a("strong",[t._v("总结逻辑设计的好处")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("多层次策略")]),t._v("：通过多层次的违规词检测和模型判断，提高了对违规评论的综合判断能力。")]),t._v(" "),a("li",[a("strong",[t._v("实时适应性")]),t._v("：动态过滤机制和动态更新词库能够使模型更好地适应不断变化的网络用语和社交动态。")]),t._v(" "),a("li",[a("strong",[t._v("综合性能")]),t._v("：综合利用违规词检测和深度学习模型，既考虑了明显的违规用语，也能够处理语义和上下文信息。")]),t._v(" "),a("li",[a("strong",[t._v("可解释性")]),t._v("：记录各个阶段的判断结果，有助于理解模型的决策过程，方便进一步优化和维护。")])]),t._v(" "),a("p",[t._v("通过这样细致和综合的设计，可以提高评论审核模型的准确性和鲁棒性，更好地满足实际需求。")]),t._v(" "),a("h2",{attrs:{id:"_2-数据来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据来源"}},[t._v("#")]),t._v(" 2. 数据来源")]),t._v(" "),a("ul",[a("li",[t._v("参考文章：https://cloud.tencent.com/developer/article/1068648")]),t._v(" "),a("li",[t._v("数据来源：https://github.com/wjx-git/IllegalTextDetection")])]),t._v(" "),a("h2",{attrs:{id:"_3-模型选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-模型选择"}},[t._v("#")]),t._v(" 3. 模型选择")]),t._v(" "),a("h3",{attrs:{id:"_3-1-结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-结构"}},[t._v("#")]),t._v(" 3.1. 结构")]),t._v(" "),a("p",[t._v("以下是TextCNN模型的结构图，结构简单，即使在CPU也能训练：")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 文本序列 (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sentence_length)\n\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Embedding层")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sentence_length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" embed_dim)\n\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("  \\\n       V   V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Conv2D + ReLU + MaxPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kernel_num)   (conv11)\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Conv2D + ReLU + MaxPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kernel_num)   (conv12)\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Conv2D + ReLU + MaxPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kernel_num)   (conv13)\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V      V      V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Concatenate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 3 * kernel_num)\n\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Dropout层")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 3 * kernel_num)\n\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("\n       V\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("全连接层")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 输出 (batch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" class_num)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("h3",{attrs:{id:"_3-2-分层解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-分层解析"}},[t._v("#")]),t._v(" 3.2. 分层解析")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Embedding层")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("作用")]),t._v("：将输入的文本序列中的每个词汇映射为对应的词向量，提供词汇的语义信息。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Conv2D + ReLU + MaxPool")]),t._v("（conv11、conv12、conv13，三个相同结构的层）：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("作用")]),t._v("：这三个层组成了多个不同尺寸的卷积核，用于捕捉输入文本中不同尺度的语义特征。")]),t._v(" "),a("li",[a("strong",[t._v("Conv2D")]),t._v("：卷积操作用于检测输入文本中的局部模式。")]),t._v(" "),a("li",[a("strong",[t._v("ReLU")]),t._v("：激活函数引入非线性，增强模型表达能力。")]),t._v(" "),a("li",[a("strong",[t._v("MaxPool")]),t._v("：最大池化操作用于降维，保留最显著的特征。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Concatenate")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("作用")]),t._v("：将三个卷积核得到的不同尺度的特征连接在一起，使模型能够同时考虑多个尺度的语义信息。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Dropout层")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("作用")]),t._v("：在训练过程中随机丢弃部分神经元，减少过拟合的风险。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("全连接层")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[a("strong",[t._v("作用")]),t._v("：将连接后的特征映射到最终的输出类别空间，用于文本分类任务。")])])])]),t._v(" "),a("p",[t._v("这个textCNN模型通过嵌入层、卷积层、全连接层等组件，能够有效地捕捉输入文本的语义信息，并用于文本分类。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-关于嵌入层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-关于嵌入层"}},[t._v("#")]),t._v(" 3.3. 关于嵌入层")]),t._v(" "),a("p",[t._v("当我们使用嵌入层时，我们将每个单词的索引映射为一个词向量。让我们假设我们有一个词汇表，其中包含5个单词：['I', 'love', 'natural', 'language', 'processing']，并且我们选择一个嵌入维度 "),a("code",[t._v("embed_dim")]),t._v(" 为 4。")]),t._v(" "),a("p",[t._v('如果我们的输入文本是 "I love language"，我们可以将它表示为索引序列 [0, 1, 3]，其中 "I" 的索引是 0，"love" 的索引是 1，"language" 的索引是 3。')]),t._v(" "),a("p",[t._v("通过嵌入层，我们可以将这些索引映射为词向量。假设我们的嵌入层参数是随机初始化的，那么可能的映射如下：")]),t._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v('Embedding Matrix:\n[[ 0.1,  0.2,  0.3,  0.4],  # 对应 "I"\n [ 0.5,  0.6,  0.7,  0.8],  # 对应 "love"\n [ 0.9,  1.0,  1.1,  1.2],  # 对应 "natural"\n [ 1.3,  1.4,  1.5,  1.6],  # 对应 "language"\n [ 1.7,  1.8,  1.9,  2.0]]  # 对应 "processing"\n\n输入序列 [0, 1, 3] 对应的词向量：\n[[ 0.1,  0.2,  0.3,  0.4],  # 对应 "I"\n [ 0.5,  0.6,  0.7,  0.8],  # 对应 "love"\n [ 1.3,  1.4,  1.5,  1.6]]  # 对应 "language"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("这就是嵌入层的作用：将文本中的单词索引映射为对应的词向量。这些词向量将成为模型的输入，帮助模型理解文本中的语义信息。在训练的过程中，这些嵌入矩阵的权重会被学习，以更好地适应具体的任务。")]),t._v(" "),a("p",[t._v("在文本处理中，原始的单词索引是一维的，通过嵌入操作，我们将这一维的离散索引映射为连续的词向量，从而引入了更多的语义信息。嵌入操作将原始的离散表示转换成密集的连续表示，这样模型可以更好地理解词汇之间的语义关系。")]),t._v(" "),a("p",[t._v("嵌入的维度（"),a("code",[t._v("embed_dim")]),t._v("）通常是一个超参数，可以根据任务和数据集的性质进行调整。较大的嵌入维度能够提供更丰富的语义信息，但也需要更多的计算资源和数据来进行训练。")]),t._v(" "),a("h2",{attrs:{id:"_4-数据处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据处理"}},[t._v("#")]),t._v(" 4. 数据处理")]),t._v(" "),a("p",[t._v("本文的数据处理过程涵盖以下主要步骤：")]),t._v(" "),a("ol",[a("li",[t._v("通过对原始数据集 "),a("code",[t._v("train.txt")]),t._v(" 进行处理，生成词表 "),a("code",[t._v("word_list.txt")]),t._v("。为了提升词表的容量，我们并未设定单词阈值，而是完全将所有单词纳入词表中。")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904715.png",loading:"lazy"}})]),t._v(" "),a("ol",[a("li",[t._v("利用生成的词表 "),a("code",[t._v("word_list.txt")]),t._v("，将 "),a("code",[t._v("train.txt")]),t._v("、"),a("code",[t._v("dev.txt")]),t._v(" 和 "),a("code",[t._v("test.txt")]),t._v(" 转换为相应的单词索引向量。")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904664.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"_5-模型训练和验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-模型训练和验证"}},[t._v("#")]),t._v(" 5. 模型训练和验证")]),t._v(" "),a("h3",{attrs:{id:"_5-1-代码文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-代码文件"}},[t._v("#")]),t._v(" 5.1. 代码文件")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904681.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_5-2-训练环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-训练环境"}},[t._v("#")]),t._v(" 5.2. 训练环境")]),t._v(" "),a("p",[t._v("采用Python3.9，conda环境，")]),t._v(" "),a("p",[t._v("可手动安装以下依赖（不写版本号默认最新版）其余依赖应该会自动装好，如果没有，按需安装即可：")]),t._v(" "),a("ol",[a("li",[t._v("pytorch（从官方下载自己设备适配的版本即可）")]),t._v(" "),a("li",[t._v("jieba")]),t._v(" "),a("li",[t._v("nltk")]),t._v(" "),a("li",[t._v("pandas")]),t._v(" "),a("li",[t._v("re（Python自带）")]),t._v(" "),a("li",[t._v("tqdm")]),t._v(" "),a("li",[t._v("numpy")]),t._v(" "),a("li",[t._v("flask")]),t._v(" "),a("li",[t._v("flask_cors")]),t._v(" "),a("li",[t._v("gunicorn（处理高并发的服务器，云部署时用）")])]),t._v(" "),a("p",[t._v("所有依赖包信息如下：")]),t._v(" "),a("blockquote",[a("p",[t._v("Package Version")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("anyio 3.6.2")]),t._v(" "),a("p",[t._v("argon2-cffi 21.3.0")]),t._v(" "),a("p",[t._v("argon2-cffi-bindings 21.2.0")]),t._v(" "),a("p",[t._v("asttokens 2.2.1")]),t._v(" "),a("p",[t._v("attrs 22.2.0")]),t._v(" "),a("p",[t._v("backcall 0.2.0")]),t._v(" "),a("p",[t._v("beautifulsoup4 4.11.1")]),t._v(" "),a("p",[t._v("bleach 6.0.0")]),t._v(" "),a("p",[t._v("blinker 1.7.0")]),t._v(" "),a("p",[t._v("bs4 0.0.1")]),t._v(" "),a("p",[t._v("certifi 2022.12.7")]),t._v(" "),a("p",[t._v("cffi 1.15.1")]),t._v(" "),a("p",[t._v("chardet 4.0.0")]),t._v(" "),a("p",[t._v("charset-normalizer 3.0.1")]),t._v(" "),a("p",[t._v("click 8.1.7")]),t._v(" "),a("p",[t._v("cloudpickle 2.2.1")]),t._v(" "),a("p",[t._v("colorama 0.4.6")]),t._v(" "),a("p",[t._v("comm 0.1.2")]),t._v(" "),a("p",[t._v("contourpy 1.0.5")]),t._v(" "),a("p",[t._v("cycler 0.11.0")]),t._v(" "),a("p",[t._v("d2l 0.17.6")]),t._v(" "),a("p",[t._v("debugpy 1.6.6")]),t._v(" "),a("p",[t._v("decorator 5.1.1")]),t._v(" "),a("p",[t._v("defusedxml 0.7.1")]),t._v(" "),a("p",[t._v("et-xmlfile 1.1.0")]),t._v(" "),a("p",[t._v("executing 1.2.0")]),t._v(" "),a("p",[t._v("filelock 3.13.1")]),t._v(" "),a("p",[t._v("Flask 3.0.0")]),t._v(" "),a("p",[t._v("Flask-Cors 4.0.0")]),t._v(" "),a("p",[t._v("fonttools 4.37.4")]),t._v(" "),a("p",[t._v("fsspec 2023.12.2")]),t._v(" "),a("p",[t._v("idna 2.10")]),t._v(" "),a("p",[t._v("imageio 2.26.0")]),t._v(" "),a("p",[t._v("importlib-metadata 6.0.0")]),t._v(" "),a("p",[t._v("ipykernel 6.20.2")]),t._v(" "),a("p",[t._v("ipython 8.8.0")]),t._v(" "),a("p",[t._v("ipython-genutils 0.2.0")]),t._v(" "),a("p",[t._v("ipywidgets 8.0.4")]),t._v(" "),a("p",[t._v("itsdangerous 2.1.2")]),t._v(" "),a("p",[t._v("jdcal 1.4.1")]),t._v(" "),a("p",[t._v("jedi 0.18.2")]),t._v(" "),a("p",[t._v("jieba 0.42.1")]),t._v(" "),a("p",[t._v("Jinja2 3.1.2")]),t._v(" "),a("p",[t._v("joblib 1.3.2")]),t._v(" "),a("p",[t._v("jsonschema 4.17.3")]),t._v(" "),a("p",[t._v("jupyter 1.0.0")]),t._v(" "),a("p",[t._v("jupyter_client 8.0.1")]),t._v(" "),a("p",[t._v("jupyter-console 6.4.4")]),t._v(" "),a("p",[t._v("jupyter_core 5.1.5")]),t._v(" "),a("p",[t._v("jupyter-events 0.6.3")]),t._v(" "),a("p",[t._v("jupyter_server 2.1.0")]),t._v(" "),a("p",[t._v("jupyter_server_terminals 0.4.4")]),t._v(" "),a("p",[t._v("jupyterlab-pygments 0.2.2")]),t._v(" "),a("p",[t._v("jupyterlab-widgets 3.0.5")]),t._v(" "),a("p",[t._v("kiwisolver 1.4.4")]),t._v(" "),a("p",[t._v("lazy_loader 0.1")]),t._v(" "),a("p",[t._v("MarkupSafe 2.1.2")]),t._v(" "),a("p",[t._v("matplotlib 3.5.1")]),t._v(" "),a("p",[t._v("matplotlib-inline 0.1.6")]),t._v(" "),a("p",[t._v("mistune 2.0.4")]),t._v(" "),a("p",[t._v("mpmath 1.3.0")]),t._v(" "),a("p",[t._v("nbclassic 0.5.1")]),t._v(" "),a("p",[t._v("nbclient 0.7.2")]),t._v(" "),a("p",[t._v("nbconvert 7.2.9")]),t._v(" "),a("p",[t._v("nbformat 5.7.3")]),t._v(" "),a("p",[t._v("nest-asyncio 1.5.6")]),t._v(" "),a("p",[t._v("networkx 3.2.1")]),t._v(" "),a("p",[t._v("nltk 3.8.1")]),t._v(" "),a("p",[t._v("notebook 6.5.2")]),t._v(" "),a("p",[t._v("notebook_shim 0.2.2")]),t._v(" "),a("p",[t._v("numpy 1.26.2")]),t._v(" "),a("p",[t._v("openpyxl 3.2.0b1")]),t._v(" "),a("p",[t._v("packaging 21.3")]),t._v(" "),a("p",[t._v("pandas 2.1.4")]),t._v(" "),a("p",[t._v("pandocfilters 1.5.0")]),t._v(" "),a("p",[t._v("parso 0.8.3")]),t._v(" "),a("p",[t._v("pickleshare 0.7.5")]),t._v(" "),a("p",[t._v("Pillow 9.2.0")]),t._v(" "),a("p",[t._v("pip 23.3.1")]),t._v(" "),a("p",[t._v("platformdirs 2.6.2")]),t._v(" "),a("p",[t._v("prometheus-client 0.16.0")]),t._v(" "),a("p",[t._v("prompt-toolkit 3.0.36")]),t._v(" "),a("p",[t._v("psutil 5.9.4")]),t._v(" "),a("p",[t._v("psycopg2 2.9.6")]),t._v(" "),a("p",[t._v("pure-eval 0.2.2")]),t._v(" "),a("p",[t._v("pycparser 2.21")]),t._v(" "),a("p",[t._v("pygad 2.19.2")]),t._v(" "),a("p",[t._v("Pygments 2.14.0")]),t._v(" "),a("p",[t._v("pyparsing 3.0.9")]),t._v(" "),a("p",[t._v("pyrsistent 0.19.3")]),t._v(" "),a("p",[t._v("python-dateutil 2.8.2")]),t._v(" "),a("p",[t._v("python-json-logger 2.0.4")]),t._v(" "),a("p",[t._v("pytz 2022.4")]),t._v(" "),a("p",[t._v("PyWavelets 1.4.1")]),t._v(" "),a("p",[t._v("pywin32 305")]),t._v(" "),a("p",[t._v("pywinpty 2.0.10")]),t._v(" "),a("p",[t._v("pyzmq 25.0.0")]),t._v(" "),a("p",[t._v("qtconsole 5.4.0")]),t._v(" "),a("p",[t._v("QtPy 2.3.0")]),t._v(" "),a("p",[t._v("regex 2023.10.3")]),t._v(" "),a("p",[t._v("requests 2.25.1")]),t._v(" "),a("p",[t._v("rfc3339-validator 0.1.4")]),t._v(" "),a("p",[t._v("rfc3986-validator 0.1.1")]),t._v(" "),a("p",[t._v("Send2Trash 1.8.0")]),t._v(" "),a("p",[t._v("sentencepiece 0.1.99")]),t._v(" "),a("p",[t._v("setuptools 68.2.2")]),t._v(" "),a("p",[t._v("six 1.16.0")]),t._v(" "),a("p",[t._v("sklearn 0.0.post1")]),t._v(" "),a("p",[t._v("sniffio 1.3.0")]),t._v(" "),a("p",[t._v("soupsieve 2.3.2.post1")]),t._v(" "),a("p",[t._v("stack-data 0.6.2")]),t._v(" "),a("p",[t._v("sympy 1.12")]),t._v(" "),a("p",[t._v("terminado 0.17.1")]),t._v(" "),a("p",[t._v("tifffile 2023.2.28")]),t._v(" "),a("p",[t._v("tinycss2 1.2.1")]),t._v(" "),a("p",[t._v("torch 2.1.2")]),t._v(" "),a("p",[t._v("torchaudio 2.1.2")]),t._v(" "),a("p",[t._v("torchdata 0.7.1")]),t._v(" "),a("p",[t._v("torchtext 0.6.0")]),t._v(" "),a("p",[t._v("torchvision 0.16.2")]),t._v(" "),a("p",[t._v("tornado 6.2")]),t._v(" "),a("p",[t._v("tqdm 4.66.1")]),t._v(" "),a("p",[t._v("traitlets 5.8.1")]),t._v(" "),a("p",[t._v("typing_extensions 4.4.0")]),t._v(" "),a("p",[t._v("tzdata 2023.3")]),t._v(" "),a("p",[t._v("urllib3 1.26.14")]),t._v(" "),a("p",[t._v("wcwidth 0.2.6")]),t._v(" "),a("p",[t._v("webencodings 0.5.1")]),t._v(" "),a("p",[t._v("websocket-client 1.5.0")]),t._v(" "),a("p",[t._v("Werkzeug 3.0.1")]),t._v(" "),a("p",[t._v("wheel 0.41.2")]),t._v(" "),a("p",[t._v("widgetsnbextension 4.0.5")]),t._v(" "),a("p",[t._v("xlrd 2.0.1")]),t._v(" "),a("p",[t._v("zipp 3.11.0")])]),t._v(" "),a("h3",{attrs:{id:"_5-3-训练信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-训练信息"}},[t._v("#")]),t._v(" 5.3. 训练信息")]),t._v(" "),a("p",[t._v("这段模型训练文件的相关信息总结如下：")]),t._v(" "),a("h3",{attrs:{id:"模型结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型结构"}},[t._v("#")]),t._v(" 模型结构")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("textCNN模型")]),t._v("：")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("输入：文本序列")]),t._v(" "),a("li",[t._v("嵌入层：词表大小为 "),a("code",[t._v("vocab_size")]),t._v("，嵌入维度为 "),a("code",[t._v("embed_dim")])]),t._v(" "),a("li",[t._v("三个卷积核（kernel_num=16）：分别大小为 3、4、5")]),t._v(" "),a("li",[t._v("Dropout层：丢弃率为 0.5")]),t._v(" "),a("li",[t._v("全连接层：输出类别数量为 "),a("code",[t._v("class_num")]),t._v("（这里为2）")])])])]),t._v(" "),a("h3",{attrs:{id:"数据处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据处理"}},[t._v("#")]),t._v(" 数据处理")]),t._v(" "),a("ul",[a("li",[t._v("通过 "),a("code",[t._v("word2vec")]),t._v(" 模块加载词表映射，得到 "),a("code",[t._v("word2ind")]),t._v(" 和 "),a("code",[t._v("ind2word")]),t._v("。")]),t._v(" "),a("li",[t._v("数据集参数 "),a("code",[t._v("dataLoader_param")]),t._v("：")]),t._v(" "),a("li",[a("ul",[a("li",[a("code",[t._v("batch_size")]),t._v(": 128")]),t._v(" "),a("li",[a("code",[t._v("shuffle")]),t._v(": True")])])])]),t._v(" "),a("h3",{attrs:{id:"训练过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#训练过程"}},[t._v("#")]),t._v(" 训练过程")]),t._v(" "),a("ul",[a("li",[t._v("优化器：Adam，学习率为 0.01")]),t._v(" "),a("li",[t._v("损失函数：负对数似然损失（NLLLoss）")]),t._v(" "),a("li",[t._v("模型参数初始化：")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("如果已存在保存的权重文件 "),a("code",[t._v("textCNN.pkl")]),t._v("，则加载权重")]),t._v(" "),a("li",[t._v("否则，使用 "),a("code",[t._v("init_weight")]),t._v(" 方法初始化权重")])])]),t._v(" "),a("li",[t._v("日志记录：每个epoch记录每个batch的训练损失，保存在日志文件 "),a("code",[t._v("log_YYMMDDHH.txt")]),t._v(" 中。")]),t._v(" "),a("li",[t._v("训练时遍历数据集，进行前向传播、计算损失、反向传播更新参数。")]),t._v(" "),a("li",[t._v("每50个batch输出一次当前epoch的训练损失。")]),t._v(" "),a("li",[t._v("每个epoch结束后输出该epoch的平均训练损失。")]),t._v(" "),a("li",[t._v("训练总共进行了100个epoch。")])]),t._v(" "),a("h3",{attrs:{id:"模型保存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型保存"}},[t._v("#")]),t._v(" 模型保存")]),t._v(" "),a("ul",[a("li",[t._v("训练完成后，保存模型权重到文件 "),a("code",[t._v("textCNN.pkl")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_5-4-训练结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-训练结果"}},[t._v("#")]),t._v(" 5.4. 训练结果")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904539.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("最后，经过100轮训练，可将验证损失控制在0.01，效果良好。")]),t._v(" "),a("h2",{attrs:{id:"_6-模型测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-模型测试"}},[t._v("#")]),t._v(" 6. 模型测试")]),t._v(" "),a("p",[t._v("经过类似的步骤，执行test.py文件即可得到测试结果，并将结果保存至日志文件log_test中")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904723.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("可以看到，测试准确率也维持在97%以上，模型可用。")]),t._v(" "),a("h2",{attrs:{id:"_7-本地部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-本地部署"}},[t._v("#")]),t._v(" 7. 本地部署")]),t._v(" "),a("p",[t._v("主要利用Flask进行本地网络api部署，操作简单易行，同时提供了html页面进行简单测试，也可使用接口测试工具如apifox、postman进行测试。")]),t._v(" "),a("h3",{attrs:{id:"_7-1-代码文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-代码文件"}},[t._v("#")]),t._v(" 7.1. 代码文件")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904920.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_7-2-api解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-api解析"}},[t._v("#")]),t._v(" 7.2. api解析")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904731.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_7-3-网页html测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-网页html测试"}},[t._v("#")]),t._v(" 7.3. 网页html测试")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904276.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_7-4-接口测试工具测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-接口测试工具测试"}},[t._v("#")]),t._v(" 7.4. 接口测试工具测试")]),t._v(" "),a("p",[t._v("这里以apifox为例：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904760.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"_8-云部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-云部署"}},[t._v("#")]),t._v(" 8. 云部署")]),t._v(" "),a("h3",{attrs:{id:"_8-1-部署环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-部署环境"}},[t._v("#")]),t._v(" 8.1. 部署环境")]),t._v(" "),a("ul",[a("li",[t._v("阿里云轻量应用服务器，系统为centos7")]),t._v(" "),a("li",[t._v("conda环境：如未安装，可参考此博客：https://blog.csdn.net/wyf2017/article/details/118676765")]),t._v(" "),a("li",[t._v("使用前根据本文5.2安装依赖即可")]),t._v(" "),a("li",[t._v("记得将本地文件上传至服务器")])]),t._v(" "),a("h3",{attrs:{id:"_8-2-配置并使用gunicorn-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-配置并使用gunicorn-服务"}},[t._v("#")]),t._v(" 8.2. 配置并使用Gunicorn 服务")]),t._v(" "),a("h4",{attrs:{id:"_8-2-1-什么是gunicorn-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-1-什么是gunicorn-服务"}},[t._v("#")]),t._v(" 8.2.1. 什么是Gunicorn 服务")]),t._v(" "),a("p",[t._v("在生产环境中，Flask自带的开发服务器通常不适用于处理高负载和并发请求。Flask的开发服务器是单线程的，并不是为了处理大量并发请求而设计的。它更适合在开发环境中使用，用于调试和测试。")]),t._v(" "),a("p",[t._v("以下是使用 Flask开发服务器的一些主要限制：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("单线程处理请求：")]),t._v(" Flask的开发服务器是单线程的，意味着它一次只能处理一个请求。在高并发情况下，这可能导致性能瓶颈。")]),t._v(" "),a("li",[a("strong",[t._v("不适合生产环境：")]),t._v(" Flask的开发服务器没有被设计为在生产环境中处理大规模负载的工具。它缺乏许多生产服务器所具有的优化和安全功能。")]),t._v(" "),a("li",[a("strong",[t._v("有安全风险：")]),t._v(" Flask的开发服务器没有像生产级服务器那样经过严格的安全审查和配置。在生产环境中使用它可能会增加安全风险。")])]),t._v(" "),a("p",[t._v("为了解决这些问题，通常建议在生产环境中使用专业的Web服务器，如Gunicorn、uWSGI等。这些服务器可以处理更多的并发请求，提供更好的性能和安全性，并具有适用于生产环境的配置选项。")]),t._v(" "),a("p",[t._v("Gunicorn就是在生产环境中使用专业的Web服务器。")]),t._v(" "),a("h4",{attrs:{id:"_8-2-2-如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-2-如何使用"}},[t._v("#")]),t._v(" 8.2.2. 如何使用")]),t._v(" "),a("p",[t._v("在使用 Gunicorn 启动 Flask 应用时，可以使用 Gunicorn 的 "),a("code",[t._v("--workers")]),t._v(" 选项指定工作进程的数量，以实现并发处理请求。每个工作进程都是一个独立的进程，可以独立运行应用代码。")]),t._v(" "),a("p",[t._v("以下是一些示例命令，演示如何在 Gunicorn 中启动 Flask 应用并设置多个工作进程：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gunicorn "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9102 predict_online:app\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在这个例子中：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-w 4")]),t._v(" 指定了使用 4 个工作进程。")]),t._v(" "),a("li",[a("code",[t._v("-b 0.0.0.0:9102")]),t._v(" 指定了绑定的地址和端口。")]),t._v(" "),a("li",[a("code",[t._v("predict_online:app")]),t._v(" 指定了要运行的 Flask 应用。")])]),t._v(" "),a("p",[t._v("请注意，"),a("code",[t._v("predict_online")]),t._v(" 应该是你文件中定义 Flask 应用的地方。")]),t._v(" "),a("p",[t._v("此外，你可以考虑使用 Gunicorn 的其他配置选项，例如 "),a("code",[t._v("--preload")]),t._v("，这将在每个工作进程启动时加载应用代码，而不是在每个请求中加载。这样可以减少工作进程的启动时间，提高性能。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gunicorn "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9102 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--preload")]),t._v(" predict_online:app\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("确保在生产环境中使用专业的 Web 服务器（如 Gunicorn）来运行 Flask 应用，以确保应用能够正确处理并发请求并保持稳定性。")]),t._v(" "),a("p",[t._v("当使用 Gunicorn 的 "),a("code",[t._v("--preload")]),t._v(" 选项时，应用代码会在每个工作进程启动时加载，而不是在每个请求中动态加载。这个过程称为应用的“预加载”。")]),t._v(" "),a("p",[a("strong",[t._v("动态加载（非预加载）")]),t._v("：")]),t._v(" "),a("p",[t._v("在动态加载模式下，每当接收到一个请求时，Gunicorn 会动态地加载应用代码并初始化应用。这意味着在每个请求处理之前，都会执行一次应用的初始化过程。这种方式的好处是在运行时可以动态更新应用代码，但也可能导致每个请求都需要花费额外的时间来加载和初始化应用。")]),t._v(" "),a("p",[a("strong",[t._v("预加载")]),t._v("：")]),t._v(" "),a("p",[t._v("在预加载模式下，应用代码会在工作进程启动时加载和初始化。这意味着在工作进程启动时，应用的所有代码都被加载到内存中，并且在处理请求时无需再次加载。这样一来，每个请求的处理过程更加高效，因为不需要在请求级别进行初始化操作。然而，这也意味着在更新应用代码时，你需要重新启动工作进程，以便使新的代码生效。")]),t._v(" "),a("p",[t._v("假设你有一个 Flask 应用，其中包含一些全局变量或初始化操作。在动态加载模式下，这些初始化操作会在每个请求中执行。在预加载模式下，这些初始化操作会在工作进程启动时执行，而不会在每个请求中重复执行。")]),t._v(" "),a("p",[t._v("在动态加载模式下，"),a("code",[t._v("some_global_variable")]),t._v(" 的初始化操作将在每个请求中执行。在预加载模式下，初始化操作只会在工作进程启动时执行一次，而后续的请求将直接使用已初始化的变量，而不需要重新执行初始化。")]),t._v(" "),a("h4",{attrs:{id:"_8-2-3-worker和负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-3-worker和负载均衡"}},[t._v("#")]),t._v(" 8.2.3. worker和负载均衡")]),t._v(" "),a("p",[t._v("在 Gunicorn 中，worker 是处理请求的工作单元，而 master 则是管理这些 worker 的主进程。在 Gunicorn 的工作模型中，master 进程负责监听端口、接收请求，并将请求分配给不同的 worker 进程进行处理。")]),t._v(" "),a("p",[t._v("Gunicorn 支持多种 worker 类型，包括 sync（同步）、eventlet、gevent、tornado 等。这些 worker 的主要区别在于它们处理请求的方式。下面是关于 Gunicorn worker 的一些关键概念：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Master 进程")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("主进程，负责启动和管理所有 worker 进程。")]),t._v(" "),a("li",[t._v("监听端口，接收客户端的连接请求。")]),t._v(" "),a("li",[t._v("当有请求到达时，负责将请求分配给可用的 worker 进程。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Worker 进程")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("工作进程，实际处理客户端请求的单元。")]),t._v(" "),a("li",[t._v("一个 Gunicorn 实例可以有多个 worker 进程，每个 worker 处理一个请求。")]),t._v(" "),a("li",[t._v("Worker 之间是独立的，它们可以并发处理多个请求。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Worker 类型")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("Gunicorn 支持多种 worker 类型，包括 sync（同步）、eventlet、gevent、tornado 等。")]),t._v(" "),a("li",[t._v("同步 worker 在每个进程中处理一个请求，而异步 worker 可以处理多个请求。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("并发性")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("Worker 的数量和并发连接数之间有关系。更多的 worker 可以处理更多的并发请求。")]),t._v(" "),a("li",[t._v("例如，使用 "),a("code",[t._v("-w")]),t._v(" 参数可以指定启动的 worker 数量，如 "),a("code",[t._v("gunicorn -w 4 myapp:app")]),t._v(" 表示启动 4 个 worker 进程。")])])])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("负载均衡")]),t._v("：")])]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("Master 进程通过简单的轮询或其他算法将请求分配给不同的 worker 进程，实现简单的负载均衡。")]),t._v(" "),a("li",[t._v("Gunicorn 还支持其他负载均衡算法，如预先分配请求到不同的 worker。")])])])]),t._v(" "),a("p",[t._v("总体而言，master 进程和多个 worker 进程之间的关系是一种主从关系。Master 进程负责管理和分配任务，而 worker 进程负责实际的请求处理。这种结构使得 Gunicorn 能够更好地利用多核处理器，并提供高性能的 Web 服务。")]),t._v(" "),a("h4",{attrs:{id:"_8-2-4-执行部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-4-执行部署"}},[t._v("#")]),t._v(" 8.2.4. 执行部署")]),t._v(" "),a("p",[t._v("由此，我们可以使用以下命令，实现最终的部署：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" gunicorn "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9102 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--preload")]),t._v(" predict_online:app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("执行结果：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904348.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("后台运行日志文件：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904554.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("可见，已成功启动。")]),t._v(" "),a("h3",{attrs:{id:"_8-3-部署效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-部署效果"}},[t._v("#")]),t._v(" 8.3. 部署效果")]),t._v(" "),a("p",[t._v("使用apifox测试：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312231904201.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"_9-源码地址和结构说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-源码地址和结构说明"}},[t._v("#")]),t._v(" 9. 源码地址和结构说明")]),t._v(" "),a("ul",[a("li",[t._v("Gitee开源地址：https://gitee.com/crzzx/comment_moderation")]),t._v(" "),a("li",[t._v("项目代码结构和说明：")])]),t._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[t._v("E"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n│  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gitignore\n│  comment_test_demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 前端测试代码\n│  example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log\n│  LICENSE\n│  model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 模型文件\n│  predict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 预测代码\n│  predict_online"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 预测代码上线版\n│  README"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("en"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│  README"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 说明文档\n│  test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 模型测试代码\n│  textCNN_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 数据集生成代码\n│  train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 模型训练代码（cpu版本）\n│  train_gpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 模型训练代码（gpu版本）\n│  __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n│\n├─data\n│  │  dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 验证数据集\n│  │  stop_word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 停词表\n│  │  test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 测试数据集\n│  │  train"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 验证数据集\n│  │\n│  ├─logs\n│  ├─result\n│  │      log_23121911"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 训练日志\n│  │      log_test_23121914"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 测试日志\n│  │      test_vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 测试集词向量\n│  │      textCNN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pkl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 训练好的模型文件\n│  │      train_vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 训练集词向量\n│  │      valid_vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 验证集词向量\n│  │      word_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 词表\n│  │\n│  └─suspect\n│          illegal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 政治敏感词\n│          illegal_char_split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n│          suspected_illegal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 辱骂词\n│\n├─data_process\n│  │  generate_word_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 词表生成代码\n│  │  word2vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 词向量生成代码\n│  │  __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n│  │\n│  └─__pycache__\n│          word2vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpython"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.")]),t._v("pyc\n│          __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpython"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.")]),t._v("pyc\n│\n└─__pycache__\n        model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpython"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.")]),t._v("pyc\n        textCNN_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpython"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.")]),t._v("pyc\n        __init__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpython"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.")]),t._v("pyc\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br")])]),a("h2",{attrs:{id:"_10-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-总结"}},[t._v("#")]),t._v(" 10. 总结")]),t._v(" "),a("p",[t._v("本文介绍了基于TextCNN文本分类模型的实现和部署，主要解决了新闻文章评论区存在的谩骂言辞问题。以下是文章的主要内容和步骤：")]),t._v(" "),a("blockquote",[a("h3",{attrs:{id:"_1-问题描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-问题描述"}},[t._v("#")]),t._v(" 1. 问题描述：")]),t._v(" "),a("p",[t._v("文章提到新闻文章评论区经常充斥着辱骂言辞，损害了平台声誉和用户体验。为了解决这个问题，需要建立一个自动识别算法，通过模型拦截谩骂评论，提升评论区的品质。")]),t._v(" "),a("h3",{attrs:{id:"_2-算法结构和思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法结构和思路"}},[t._v("#")]),t._v(" 2. 算法结构和思路：")]),t._v(" "),a("p",[t._v("文章详细描述了解决问题的算法结构和设计思路，包括：")]),t._v(" "),a("ul",[a("li",[t._v("预处理阶段：文本清洗和分词处理。")]),t._v(" "),a("li",[t._v("辱骂违规词检测：建立违规词库，采用多层次匹配策略和动态过滤机制。")]),t._v(" "),a("li",[t._v("政治敏感词检测：建立敏感词库，进行关联性分析。")]),t._v(" "),a("li",[t._v("TextCNN模型：使用卷积神经网络结构，包括嵌入层、卷积层、全连接层等。")]),t._v(" "),a("li",[t._v("输出和审核结果：综合判断辱骂违规词检测、政治敏感词检测和TextCNN模型的输出。")])]),t._v(" "),a("h3",{attrs:{id:"_3-数据来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据来源"}},[t._v("#")]),t._v(" 3. 数据来源：")]),t._v(" "),a("p",[t._v("文章引用了一个参考文章和一个数据来源链接，其中数据来源包括了违规词和政治敏感词。")]),t._v(" "),a("h3",{attrs:{id:"_4-模型选择和训练"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-模型选择和训练"}},[t._v("#")]),t._v(" 4. 模型选择和训练：")]),t._v(" "),a("p",[t._v("文章选择了TextCNN模型，并提供了模型的结构图和关于嵌入层的详细解释。描述了数据处理、训练和验证的过程，以及模型的保存和测试效果。")]),t._v(" "),a("h3",{attrs:{id:"_5-本地部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-本地部署"}},[t._v("#")]),t._v(" 5. 本地部署：")]),t._v(" "),a("p",[t._v("使用Flask进行本地网络API部署，提供了HTML页面进行简单测试，同时使用Gunicorn处理高并发的服务器。")]),t._v(" "),a("h3",{attrs:{id:"_6-云部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-云部署"}},[t._v("#")]),t._v(" 6. 云部署：")]),t._v(" "),a("p",[t._v("介绍了在阿里云轻量应用服务器上的部署环境和配置，并通过Gunicorn进行服务启动。详细说明了Gunicorn的工作原理、worker和负载均衡的概念，以及如何使用Gunicorn进行生产环境部署。")]),t._v(" "),a("h3",{attrs:{id:"_7-代码结构和文件说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-代码结构和文件说明"}},[t._v("#")]),t._v(" 7. 代码结构和文件说明：")]),t._v(" "),a("p",[t._v("提供了项目的Gitee开源地址、代码结构和各个文件的功能说明。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);