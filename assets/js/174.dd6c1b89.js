(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{476:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"用布隆过滤器实现检查用户名是否存在-用户注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用布隆过滤器实现检查用户名是否存在-用户注册"}},[s._v("#")]),s._v(" 用布隆过滤器实现检查用户名是否存在(用户注册)")]),s._v(" "),t("blockquote",[t("p",[s._v("作者："),t("a",{attrs:{href:"https://juejin.cn/user/128017175944557",target:"_blank",rel:"noopener noreferrer"}},[s._v("顾恙ツ"),t("OutboundLink")],1),s._v("，"),t("a",{attrs:{href:"https://wx.zsxq.com/dweb2/index/footprint/581112422281244",target:"_blank",rel:"noopener noreferrer"}},[s._v("编程导航星球"),t("OutboundLink")],1),s._v(" 编号 2784")])]),s._v(" "),t("p",[s._v("今天在做项目的时候看到了一个点，就是很多人在写注册接口的时候坑会忽略的，就是对于一些不能重复的信息的查看是怎么处理才能高效一点，很多人都是采用直接访问数据库或者缓存的形式来解决的，今天我带来一个用布隆过滤器实现的案例来举例说明一下，感兴趣的同学可以看一下！")]),s._v(" "),t("h2",{attrs:{id:"引言-检查用户名是否存在"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引言-检查用户名是否存在"}},[s._v("#")]),s._v(" 引言：检查用户名是否存在")]),s._v(" "),t("p",[s._v("首先，明确我们的场景，就是在用户注册的时候查询一下用户名和账户是否已经存在了，这个是一个很基础的问题，但是很多小伙伴可能只想到了第一种，所以这里我们主要列举三种方案，并且列举一下这三种方案的优缺点，希望对于小伙伴们有所帮助：")]),s._v(" "),t("ol",[t("li",[s._v("直接查询数据库请求用户名是否存在")]),s._v(" "),t("li",[s._v("在查询数据库之前加一层缓存")]),s._v(" "),t("li",[s._v("使用布隆过滤器")])]),s._v(" "),t("h2",{attrs:{id:"_1-检查用户名是否存在"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-检查用户名是否存在"}},[s._v("#")]),s._v(" 1. 检查用户名是否存在")]),s._v(" "),t("p",[s._v("第一种方式，也就是最直接的，那就是查询数据库请求用户名是否存在。 流程图如下： "),t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051234.png",loading:"lazy"}})]),s._v(" "),t("p",[s._v("这种方式很直接，也是我们作为初学者最容易想到的，这种方式如果数据量不大，确实可以这样做，但是，你有没有考虑过一个点，当你的网站用户数量变多之后，就所有用户的请求，无论存在还是不存在，所有的用户名查询请求都会请求到数据库，这样下去数据库的压力不就很大了吗？所以，针对以上问题，我这里提出一个问题，问题如下：")]),s._v(" "),t("p",[t("strong",[s._v("海量用户如果查询的用户名存在或者不存在的场景，全部请求都打到数据库，这样会对数据库产生巨大的压力。")])]),s._v(" "),t("h2",{attrs:{id:"_2-根据用户名加载缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-根据用户名加载缓存"}},[s._v("#")]),s._v(" 2. 根据用户名加载缓存")]),s._v(" "),t("p",[s._v("第二种方式：根据用户名加载缓存，然后对缓存实现访问，如果缓存内存在数据的话，那就访问缓存内的内容，缓存中如果没有对应的数据，再访问数据库。 针对以上场景，在学习了 Redis 之后的小伙伴可能会有一个想法，那就是我可不可以将数据库里面所有已经有的用户名全都放到缓存里呢，想到这里的小伙伴说明很不错，你可以想到用 Redis 来作缓存，说明了你已经了解 Redis 的基本使用了，那么，接下来，针对这个点，我们来看一下以下的流程图：")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051228.png",loading:"lazy"}})]),s._v(" "),t("p",[s._v("现在我们来分析一下该方案存在的问题： 是否要设置数据的有效期？ 不设置有效期，用户名这个不属于热点数据，如果将大批量的数据放到内存中，这是一种对于 Redis 内存数据的浪费； 设置有效期，设置有效期，如果用户名不存在了，就刷新 DB，要是用户故意发起这种不存在的数据，就每次都要加载 DB,这样对于数据库的压力就会比较大； 综上所示，我们这里只能设置为没有无效期，即永久数据； 如果你设置为永久不过期数据，占用 Redis 内存太高了")]),s._v(" "),t("h2",{attrs:{id:"_3-布隆过滤器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-布隆过滤器"}},[s._v("#")]),s._v(" 3. 布隆过滤器")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051322.png",loading:"lazy"}})]),s._v(" "),t("p",[s._v("针对以上两种情况，可能很多人就陷入了无解的境地了，那么有什么更好的方法呢，那就是我们今天的压轴——布隆过滤器。 \ufeff\ufeff\ufeff 首先，很多人可能听说过布隆过滤器，但是可能并不是那么得熟悉，我们在这里先介绍一下布隆过滤器")]),s._v(" "),t("h3",{attrs:{id:"_3-1-什么是布隆过滤器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-什么是布隆过滤器"}},[s._v("#")]),s._v(" 3.1. 什么是布隆过滤器？")]),s._v(" "),t("p",[s._v("布隆过滤器是一种数据结构，可以快速地判断一个元素是否存在于一个集合中，这里的元素就是我们的用户名，集合就是存储用户名的集合。具体来说，布隆过滤器包含一个位数组和一组哈希函数。位数组的初始值全部置为 0。在插入一个元素时，将该元素经过多个哈希函数映射到位数组上的多个位置，并将这些位置的值置为 1。")]),s._v(" "),t("blockquote",[t("p",[s._v("这里提一个点，为什么不用数组和字符串来存呢？ 这个是因为位数据其所占空间是非常小的，1字节（Byte）=8位（Bit）")])]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051498.png",loading:"lazy"}}),s._v(" 在查询一个元素是否存在时，会将该元素经过多个哈希函数映射到位数组上的多个位置，如果所有位置的值都为 1，则认为元素存在；如果存在任一位置的值为 0，则认为元素不存在。")]),s._v(" "),t("h3",{attrs:{id:"_3-2-优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-优缺点"}},[s._v("#")]),s._v(" 3.2. 优缺点")]),s._v(" "),t("p",[s._v("优点： 由于其使用哈希函数直接定位数组的下标，所以可以高效地判断一个元素是否属于一个大规模集合 由于其使用位数组的方式，所以其很节省内存，一亿的元素，其只需要 500 MB 的内存便可以存储 40 亿的数据，这种内存的消耗是可以接受的 缺点： 其可能存在一定的误判情况，由于是哈希存储，其可能产生哈希冲突的情况，举例来说，就是我现在数字 1 放到了 6 的位置，然后我现在 6 来访问的话，可能访问到 6 的位置，这个时候数组中是没有 6 的，就可能存在误判的情况，但是如果想使用布隆过滤器的话，就要考虑可不可以忍受这种容错性。")]),s._v(" "),t("h3",{attrs:{id:"_3-3-布隆过滤器误判理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-布隆过滤器误判理解"}},[s._v("#")]),s._v(" 3.3. 布隆过滤器误判理解")]),s._v(" "),t("p",[s._v("布隆过滤器要设置初始容量。容量设置越大，发生冲突的几率就越低。 布隆过滤器会设置预期的误判值。")]),s._v(" "),t("h3",{attrs:{id:"_3-4-本题的场景是否可以接受误判"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-本题的场景是否可以接受误判"}},[s._v("#")]),s._v(" 3.4. 本题的场景是否可以接受误判？")]),s._v(" "),t("p",[s._v("这种场景下的误判是可以容忍的，因为用户名本身不是非常重要的数据，也就是说我如果设置用户名为 AAA，系统返回我这个用户名不可以使用的话，我只需要在AAA的基础上加一个字符，即 AAAA就可以了，所以这种场景式可以接受误判的。")]),s._v(" "),t("h3",{attrs:{id:"_3-5-布隆过滤器流程图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-布隆过滤器流程图"}},[s._v("#")]),s._v(" 3.5. 布隆过滤器流程图")]),s._v(" "),t("p",[s._v("初始化流程图")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051312.png",loading:"lazy"}})]),s._v(" "),t("p",[s._v("执行流程图：")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311201051121.png",loading:"lazy"}})]),s._v(" "),t("h2",{attrs:{id:"_4-布隆过滤器实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-布隆过滤器实战"}},[s._v("#")]),s._v(" 4. 布隆过滤器实战")]),s._v(" "),t("h2",{attrs:{id:"_4-1-引入-redission-依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-引入-redission-依赖"}},[s._v("#")]),s._v(" 4.1. 引入 Redission 依赖")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.boot"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-boot-starter-data-redis"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.redisson"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("redisson-spring-boot-starter"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"_4-2-配置-redis-参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-配置-redis-参数"}},[s._v("#")]),s._v(" 4.2. 配置 Redis 参数")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 127.0.0.1\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_4-3-创建布隆过滤器实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-创建布隆过滤器实例"}},[s._v("#")]),s._v(" 4.3. 创建布隆过滤器实例")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("redisson"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBloomFilter")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("redisson"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedissonClient")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EnableConfigurationProperties")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bean")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Configuration")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 布隆过滤器配置\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBloomFilterConfiguration")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 防止用户注册查询数据库的布隆过滤器\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBloomFilter")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("userRegisterCachePenetrationBloomFilter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedissonClient")]),s._v(" redissonClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBloomFilter")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" cachePenetrationBloomFilter "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redissonClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBloomFilter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cachePenetrationBloomFilter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tryInit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" cachePenetrationBloomFilter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("tryInit 有两个核心参数：")]),s._v(" "),t("ul",[t("li",[s._v("expectedInsertions：预估布隆过滤器存储的元素长度。")]),s._v(" "),t("li",[s._v("falseProbability：运行的误判率。")])]),s._v(" "),t("p",[s._v("错误率越低，位数组越长，布隆过滤器的内存占用越大。 错误率越低，散列 Hash 函数越多，计算耗时较长。 一个布隆过滤器占用大小的在线网站："),t("a",{attrs:{href:"https://krisives.github.io/bloom-calculator/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Bloom Filter Calculator"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("使用布隆过滤器的两种场景：")]),s._v(" "),t("ul",[t("li",[s._v("初始使用：注册用户时就向容器中新增数据，就不需要任务向容器存储数据了。")]),s._v(" "),t("li",[s._v("使用过程中引入：读取数据源将目标数据刷到布隆过滤器。")])]),s._v(" "),t("h3",{attrs:{id:"_4-4-代码中的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-代码中的使用"}},[s._v("#")]),s._v(" 4.4. 代码中的使用")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBloomFilter")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userRegisterCachePenetrationBloomFilter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);