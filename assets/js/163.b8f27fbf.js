(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{461:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"浅谈-cookie-和-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浅谈-cookie-和-session"}},[s._v("#")]),s._v(" 浅谈 cookie 和 session")]),s._v(" "),t("blockquote",[t("p",[s._v("作者："),t("a",{attrs:{href:"https://www.code-nav.cn/user/1620599227736473602/info",target:"_blank",rel:"noopener noreferrer"}},[s._v("Louis brilliant"),t("OutboundLink")],1),s._v("，"),t("a",{attrs:{href:"https://wx.zsxq.com/dweb2/index/group/51122858222824",target:"_blank",rel:"noopener noreferrer"}},[s._v("编程导航星球"),t("OutboundLink")],1),s._v(" 编号 11413")])]),s._v(" "),t("p",[s._v("关于用户信息存储相关的问题")]),s._v(" "),t("blockquote",[t("p",[s._v("最近写了好多次登录注册的业务接口，那不免会听到session、cookie等概念。那么他们是什么呢？之间的关系？有啥作用呢？我这次终于好好捋清楚他们的关系了，这次做一次学习总结。")])]),s._v(" "),t("h2",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),t("p",[s._v("先讨论Session和Cookie，我们先了解其诞生的背景，"),t("strong",[s._v("毕竟需求推动技术的")]),s._v("！")]),s._v(" "),t("p",[s._v("基于以前的互联网的网络协议的请求是HTTP（无状态的网络请求协议），意味着每个单独的请求之间是"),t("strong",[s._v("相互独立、互不相关")]),s._v("的，服务器在处理一个请求后并不会保存任何关于客户端状态的信息。这样带来的弊端就是服务端无法判断客户端发来的请求是哪个用户发起的，因此我们就需要对"),t("strong",[s._v("状态保持进行额外处理")]),s._v("，这就诞生了Cookie和Session。")]),s._v(" "),t("h2",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[s._v("#")]),s._v(" Cookie")]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("p",[s._v("Cookie（HTTP Cookie）是由服务器（服务端）发送到用户浏览器（客户端）并保存在用户本地计算机上的"),t("strong",[s._v("小型文本文件")]),s._v("（"),t("code",[s._v("可持久化")]),s._v("）。Cookie 用于存储特定网站的用户信息（"),t("code",[s._v("状态保持")]),s._v("），以便在用户访问同一网站时可以检索和使用这些信息。")]),s._v(" "),t("h3",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("blockquote",[t("p",[s._v("概念似乎晦涩难懂，以一些应用场景举例，就可能体察到Cookie的存在啦")])]),s._v(" "),t("ol",[t("li",[s._v("用户登录，存储账号密码")])]),s._v(" "),t("p",[s._v("这个就必须是"),t("strong",[s._v("首次登录成功后")]),s._v("，浏览器会提示用户是否要保存账号信息，这个本质就是通过Cookie进行用户信息的存储，下次就可以直接"),t("code",[s._v("免登陆")]),s._v("操作了。")]),s._v(" "),t("blockquote",[t("p",[s._v("PS:免登陆不是说不用通过数据库查询，而是下次登录的信息从Cookie中取出。")])]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543693.png",loading:"lazy"}})]),s._v(" "),t("ol",[t("li",[s._v("会话管理")])]),s._v(" "),t("p",[s._v("用于检测用户是否在网站登录后有进行连续操作（访问网站资源），否则超过过期时间，则会消失，即用户就得重新校验身份。例如：哔站登录后不作任何操作，30天过需要重新登录。")]),s._v(" "),t("ol",[t("li",[s._v("个性化体验")])]),s._v(" "),t("p",[s._v("这种存储个人偏好配置，采用的方案之一就有是Cookie进行的。个人偏好配置比如：暗黑模式，页面布局、语言选择等等。")]),s._v(" "),t("h3",{attrs:{id:"作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),t("p",[s._v("通过上面的介绍，Cookie的作用也应该已经呼之欲出了！这里还是总结一下~")]),s._v(" "),t("ul",[t("li",[s._v("服务器识别用户，保持用户在跳转页面时会话状态的一致性。")]),s._v(" "),t("li",[s._v("实现免登陆，自动进行身份验证")]),s._v(" "),t("li",[s._v("保留个性化体验")])]),s._v(" "),t("h3",{attrs:{id:"存储位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储位置"}},[s._v("#")]),s._v(" 存储位置")]),s._v(" "),t("p",[s._v("既然Cookie是存储在本机的小型文本，那么它具体存储在哪里呢？")]),s._v(" "),t("p",[s._v("答：不同的浏览器和不同的操作系统，Cookie存储本机的位置都是不同的。见下图（Chatgpt如是说）")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543765.png",loading:"lazy"}})]),s._v(" "),t("h2",{attrs:{id:"session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[s._v("#")]),s._v(" Session")]),s._v(" "),t("blockquote",[t("p",[s._v("Session的中文名是会话,Session和Cookie可谓是“黄金搭档”，有了Cookie就一定有Session。")])]),s._v(" "),t("h4",{attrs:{id:"概念-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("p",[s._v("会话（Session）是指在用户与服务器**（服务端）**之间建立的一个交互周期。它允许服务器跟踪用户在一系列请求和响应之间的状态，从而实现一定程度的状态保持。意思就是我们常说的Session是存在于服务端的一个概念，用于跟踪用户的请求和响应。")]),s._v(" "),t("blockquote",[t("p",[s._v("问题：")]),s._v(" "),t("ol",[t("li",[s._v("浏览器的Cookie里面也有session，和服务端的Session的区别是什么？")])]),s._v(" "),t("p",[s._v("答：前者的Session又称之为"),t("strong",[s._v("会话Cookie")]),s._v("，他是属于浏览器进程中Session，一旦关闭浏览器，会话Cookie就会被杀死，因此是"),t("strong",[s._v("不具持久化")]),s._v("的；后者的"),t("strong",[s._v("Session")]),s._v("是创建于服务端，他可以"),t("strong",[s._v("被持久化")]),s._v("，可以存储多个地方，如：内存，磁盘等。")])]),s._v(" "),t("h4",{attrs:{id:"cookie和session的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session的关系"}},[s._v("#")]),s._v(" Cookie和Session的关系")]),s._v(" "),t("p",[s._v("我以关系图来表示，这样显得更直观。")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543936.png",loading:"lazy"}})]),s._v(" "),t("h4",{attrs:{id:"session的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session的生命周期"}},[s._v("#")]),s._v(" Session的生命周期")]),s._v(" "),t("p",[s._v("这里就得要分类讨论了，浏览器的Session（会话Cookie）和服务端的Session的生命周期是不一样的。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("会话Cookie：")]),s._v(" "),t("p",[s._v("浏览器端的 Session 存储在用户的浏览器中，通常在"),t("strong",[s._v("用户关闭浏览器时结束")]),s._v("。这种 Session 只在用户的当前浏览器窗口或标签页内有效。当用户关闭浏览器时，浏览器通常会清除与该 Session 相关的 Cookie 数据。")])]),s._v(" "),t("li",[t("p",[s._v("Session：")]),s._v(" "),t("p",[s._v("服务端的 Session 存储在服务器上，其"),t("strong",[s._v("生命周期通常由服务器的配置来控制")]),s._v("。服务端的 Session 可以在用户的多个请求之间保持状态，而不受用户关闭浏览器的影响。")])])]),s._v(" "),t("p",[s._v("问题：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("不同用户在同一个浏览器同一个标签页发起同一个请求，sessionId相同吗？")]),s._v(" "),t("blockquote",[t("p",[s._v("是相同的，但这样当前的session的value会被下一个请求的session的value覆盖。（前提是session的key是相同的）")])])]),s._v(" "),t("li",[t("p",[s._v("同一个浏览器不同的标签页发起同一个请求，sessionId相同吗？")]),s._v(" "),t("blockquote",[t("p",[s._v("是相同的，因为依旧遵照这同一个浏览器同一个请求，其sessionId是不变的。")])])]),s._v(" "),t("li",[t("p",[s._v("不同浏览器发起同一个请求，sessionId相同吗？")]),s._v(" "),t("blockquote",[t("p",[s._v("是不同的，因为请求的对象都变了，sessionId肯定不同")])])])]),s._v(" "),t("p",[s._v("口说无凭，我进行了实验，写了一个很简单的请求，进行了测试。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@GetMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpServletRequest")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpServletResponse")]),s._v(" response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSession")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWriter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("Edge浏览器的SessionId：")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543002.png",loading:"lazy"}})]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543923.png",loading:"lazy"}}),s._v(" Chrome的SessionId")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202312151543928.png",loading:"lazy"}})]),s._v(" "),t("p",[s._v("总结：不管是否是同一个用户还是不同的标签，只要符合"),t("strong",[s._v("同一个浏览器同一个请求")]),s._v("，那么的sessionId一定是相同的！")]),s._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/java_faep/article/details/78082802",target:"_blank",rel:"noopener noreferrer"}},[s._v("服务器端Session、客户端Session和Cookie的区别_session在网络应用中称为会话,每个用户首次与web服务器建立连接时,就会产生一个se-CSDN博客"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/samniwu/article/details/90417160",target:"_blank",rel:"noopener noreferrer"}},[s._v("java中session的用法与原理-CSDN博客"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_41538097/article/details/106239901",target:"_blank",rel:"noopener noreferrer"}},[s._v("session何时被创建，何时被销毁以及设置session过期时间_session对象在什么时候被创建-CSDN博客"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/hanziang1996/article/details/78969044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Session的生命周期和工作原理-CSDN博客"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/zhujason9107/article/details/52808648",target:"_blank",rel:"noopener noreferrer"}},[s._v("session什么情况下会改变_什么样的情况下会出现不同session-CSDN博客"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);