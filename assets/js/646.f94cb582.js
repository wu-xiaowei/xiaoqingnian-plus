(window.webpackJsonp=window.webpackJsonp||[]).push([[646],{943:function(a,t,s){"use strict";s.r(t);var _=s(4),v=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"鱼皮这个月就写了这点儿代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#鱼皮这个月就写了这点儿代码"}},[a._v("#")]),a._v(" 鱼皮这个月就写了这点儿代码？")]),a._v(" "),t("blockquote",[t("p",[a._v("本文作者："),t("a",{attrs:{href:"https://yuyuanweb.feishu.cn/wiki/Abldw5WkjidySxkKxU2cQdAtnah",target:"_blank",rel:"noopener noreferrer"}},[a._v("程序员鱼皮"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("本站地址："),t("a",{attrs:{href:"https://codefather.cn",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://codefather.cn"),t("OutboundLink")],1)])]),a._v(" "),t("blockquote",[t("p",[a._v("猜猜写了多少行？都写了哪些语言呢？")])]),a._v(" "),t("p",[a._v("大家好，我是鱼皮。")]),a._v(" "),t("p",[a._v("时间过得真是太快了，又到月底了。对于程序员来说，总结还是挺重要的，我也一直保持着一个习惯，就是每个月末都要看一下自己这个月的代码统计情况，比如写了多少行代码、写了哪些语言的代码、占比是多少等等。")]),a._v(" "),t("p",[a._v("接下来就带大家看一看咯~")]),a._v(" "),t("h3",{attrs:{id:"本月不摸鱼情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本月不摸鱼情况"}},[a._v("#")]),a._v(" 本月不摸鱼情况")]),a._v(" "),t("p",[a._v("首先，代码统计肯定不是我自己来做的，总不可能一行行代码去数、再去分类吧！所以，我一般直接看公司提供的代码提交报告，根据你每个月的代码 git 提交数，自动统计生成。")]),a._v(" "),t("p",[a._v("比如下面这个代码提交语言饼图：")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043133.png",loading:"lazy"}}),a._v("本月代码提交语言")]),a._v(" "),t("p",[a._v("从饼图中，就能看出我这个月写了 23.58 % 的 Java、写了 30 % 左右的前端（TypeScript + JavaScript + CSS）、写了 12.67 % 的 Markdown、还有 30 % 左右的其他语言。")]),a._v(" "),t("p",[a._v("等等，Others 是其他我能理解，这个 UNKNOWN 是什么鬼？！我就当是系统的 Bug 了吧哈哈。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043960.png",loading:"lazy"}})]),a._v(" "),t("p",[a._v("那大家是否好奇这其他语言都有什么呢？")]),a._v(" "),t("p",[a._v("我举一些例子，比如 Java 和前端项目的一些配置和数据交换文件，比如 xml、yaml、yml、properties、conf、 json、proto 等。还有一些脚本文件，像 bash 脚本、bat 脚本、SQL 脚本等。还有一些工程化的文件，比如 gradle 项目管理，以及自动构建项目用到的 jenkinsfile 等。")]),a._v(" "),t("p",[a._v("之前有小伙伴质疑我的工作不是全栈（啥都干），这回可以相信了吧！")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043040.png",loading:"lazy"}})]),a._v(" "),t("p",[a._v("不过，不是说只有全栈工程师才要写各种语言。要做一个完整的项目，不可能只局限于一个编程语言本身，相关的技术栈像上面提到的配置文件、数据交换文件、脚本、工程化文件等，其实是每个程序员都应该熟悉或了解的。只有这样，你才能算是一名工程师，而不是靠复制粘贴度日的码农。")]),a._v(" "),t("p",[a._v("哦对，好像我现在大部分代码也靠复制粘贴，我搁这儿打脸放鞭炮呢？")]),a._v(" "),t("p",[a._v("这个月我新写了 15.8 万行代码，平均每天 500 行，也不是很多。但是这个只会统计你最后通过提交的代码，也就是经过我优化后的，所以实际上每天估计也会写近千行代码吧。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043039.png",loading:"lazy"}}),a._v("本月代码行数")]),a._v(" "),t("p",[a._v("不过，关注代码行数也没太大的意义，自己看着爽就完事儿，也能侧面反映出我没怎么摸鱼哈哈！")]),a._v(" "),t("h3",{attrs:{id:"意义何在"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#意义何在"}},[a._v("#")]),a._v(" 意义何在？")]),a._v(" "),t("p",[a._v("看自己的代码统计有什么意义呢？对我来说至少有三点：")]),a._v(" "),t("h4",{attrs:{id:"_1-复盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-复盘"}},[a._v("#")]),a._v(" 1. 复盘")]),a._v(" "),t("p",[a._v("首先，帮我回顾这个月的工作和效率。")]),a._v(" "),t("p",[a._v("其实这半年来，大部分情况下我都是在做调研、技术选型和场景分析，除了这个月写的代码比较多之外，其他时间很少写代码。因此，当我意识到代码写的少了时，我会有意在工作之余去花更多的时间来做自己的项目，多写一些代码，不让自己生疏。")]),a._v(" "),t("p",[a._v("那这个月代码写的比较多了，我又会警醒自己不要只沉迷于写代码，成为了项目和老板的工具人。我会在之后有意让自己更多关注代码之外的东西，比如业务场景；还会思考写这么多代码来实现这个需求是否真的有意义，能否换一种方式。")]),a._v(" "),t("p",[a._v("另外不知道大家是否注意，Markdown 文档语言在我本月的代码中占比 12 % 左右，也意味着最近我写了不少文档，多写文档对项目来说是很有帮助的！")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043958.png",loading:"lazy"}})]),a._v(" "),t("h4",{attrs:{id:"_2-未来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-未来"}},[a._v("#")]),a._v(" 2. 未来")]),a._v(" "),t("p",[a._v("通过分析代码统计，可以确定我未来的重点学习方向，比如有个月我在做一个用 Java 实现的项目，写了 80 % 的 Java 代码，那我自然会把重心放在 Java 上，在工作之余去深入看一些 Java 的东西。")]),a._v(" "),t("h4",{attrs:{id:"_3-成就感"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-成就感"}},[a._v("#")]),a._v(" 3. 成就感")]),a._v(" "),t("p",[a._v("不要小瞧这一点，回顾自己写的代码数的确能帮助你收获成就感，就像是打怪升级一样，看看自己上个月刷了多少只怪、爆了多少装备，这个月才会更有动力去冲！")]),a._v(" "),t("p",[a._v("当然，代码写的多也不一定是好事，有些程序员老奸巨猾的，为了凑行数，特么的一行代码后面跟一个空行，一行代码写完的功能拆成十行来写！没必要没必要。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043038.png",loading:"lazy"}})]),a._v(" "),t("h3",{attrs:{id:"如何统计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何统计"}},[a._v("#")]),a._v(" 如何统计？")]),a._v(" "),t("p",[a._v("看到这里，肯定有同学也想统计下自己写的代码行数，这里简单介绍几种方式。")]),a._v(" "),t("h4",{attrs:{id:"_1-github"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-github"}},[a._v("#")]),a._v(" 1. GitHub")]),a._v(" "),t("p",[a._v("如果使用 GitHub 来管理你的代码，可以进入 "),t("code",[a._v("insights")]),a._v(" 面板，能够看到指定时期的提交数、文件修改数、代码新增和删除数。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043982.png",loading:"lazy"}})]),a._v(" "),t("blockquote",[t("p",[a._v("GitHub 统计分析")])]),a._v(" "),t("h4",{attrs:{id:"_2-编辑器插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-编辑器插件"}},[a._v("#")]),a._v(" 2. 编辑器插件")]),a._v(" "),t("p",[a._v("很多编辑器像 WebStorm、IDEA、VSCode 等，都提供了代码行统计插件，比如 JetBrains 全家桶通用的 "),t("code",[a._v("Statistic")]),a._v(" 插件。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043929.png",loading:"lazy"}}),a._v("代码统计插件")]),a._v(" "),t("p",[a._v("安装之后，就能看到代码中各个语言的行数、占比等信息了。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043981.png",loading:"lazy"}})]),a._v(" "),t("blockquote",[t("p",[a._v("代码行统计")])]),a._v(" "),t("h4",{attrs:{id:"_3-工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-工具"}},[a._v("#")]),a._v(" 3. 工具")]),a._v(" "),t("p",[a._v("还有一些现成的代码统计工具，比如 "),t("code",[a._v("cloc")]),a._v(" 。通过命令行使用，可以直接分析本地或者 GitHub 上的代码包。支持按语言分类统计代码空行、注释行、自然行数等，还能单独分析指定提交。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043980.png",loading:"lazy"}})]),a._v(" "),t("blockquote",[t("p",[a._v("cloc 工具分析")])]),a._v(" "),t("h4",{attrs:{id:"_4-硬核命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-硬核命令"}},[a._v("#")]),a._v(" 4. 硬核命令")]),a._v(" "),t("p",[a._v("如果你的 git 命令耍的很溜，也可以直接写命令来统计代码，根本不需要什么工具！")]),a._v(" "),t("p",[a._v("不过看这狗命令就知道，这种方式过于硬核：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('git log --author="_your_name_" --pretty=tformat: --numstat | awk \'{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s, removed lines: %s, total lines: %s\\n", add, subs, loc }\' -\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("hr"),a._v(" "),t("p",[a._v("好了，以上就是本期分享，原创不易，如果觉得文章不错，希望 "),t("strong",[a._v("点赞 + 在看")]),a._v(" 支持下，给俺点创作动力。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pic.yupi.icu/5563/202311031043078.png",loading:"lazy"}})])])}),[],!1,null,null,null);t.default=v.exports}}]);