#
#name: 部署文档
#
#on:
#  push:
#    branches:
#      # 确保这是你正在使用的分支名称
#      - main
#
#permissions:
#  contents: write
#
#jobs:
#  deploy-gh-pages:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#          # 如果你文档需要 Git 子模块，取消注释下一行
#          # submodules: true
#
#      - name: 安装 pnpm
#        uses: pnpm/action-setup@v2
#        with:
#          run_install: true
#          version: 8
#
#
#      - name: 设置 Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#          cache: pnpm
#
#
#      - name: 构建文档
#        env:
#          NODE_OPTIONS: --max_old_space_size=8192
#        run: |-
#          pnpm run docs:build
#          > docs/.vuepress/dist/.nojekyll
#
#      - name: 部署文档
#        uses: JamesIves/github-pages-deploy-action@v4
#        with:
#          # 这是文档部署到的分支名称
#          branch: gh-pages
#          folder: docs/.vuepress/dist
#name: Build and Deploy
#on: [push]
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@master
#
#      - name: vuepress-deploy
#        uses: jenkey2011/vuepress-deploy@master
#        env:
#          ACCESS_TOKEN: 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
#          TARGET_REPO: wu-xiaowei/xiaoqingnian-plus
#          TARGET_BRANCH: gh-pages
#          BUILD_SCRIPT: yarn && yarn docs:build
#          BUILD_DIR: docs/.vuepress/dist
          #CNAME: https://www.xxx.com


# name 可以自定义
#name: Deploy GitHub Pages
#
## 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
#on:
#  push:
#    branches:
#      - main
#
## 任务
#jobs:
#  build-and-deploy:
#    # 服务器环境：最新版 Ubuntu
#    runs-on: ubuntu-latest
#    steps:
#      # 拉取代码
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          persist-credentials: false
#
#      # 生成静态文件
#      - name: Build
#        run: npm install && yarn && yarn docs:build
#
#      # 部署到 GitHub Pages
#      - name: Deploy
#        uses: JamesIves/github-pages-deploy-action@releases/v3
#        with:
#          ACCESS_TOKEN: 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 # 也就是我们刚才生成的 secret
#          BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
#          FOLDER: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方



name: docs

on:
  # 每当 push 到 main 分支时触发部署
  push:
    branches: [main]
  # 手动触发部署
  #workflow_dispatch:

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          # 选择要使用的 pnpm 版本
          version: 8
          # 使用 pnpm 安装依赖
          run_install: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 18
          # 缓存 pnpm 依赖
          cache: pnpm

      # 运行构建脚本
      - name: Build VuePress site
        run: export NODE_OPTIONS=--openssl-legacy-provider && pnpm docs:build

      # 查看 workflow 的文档来获取更多信息
      # @see https://github.com/crazy-max/ghaction-github-pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          # 部署到 gh-pages 分支
          target_branch: gh-pages
          # 部署目录为 VuePress 的默认输出目录
          build_dir: docs/.vuepress/dist
        env:
          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: 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



